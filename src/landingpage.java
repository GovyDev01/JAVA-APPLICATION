/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import com.mysql.cj.jdbc.result.ResultSetMetaData;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author jhonv
 */
public class landingpage extends javax.swing.JFrame {
private int xOffset, yOffset;
    /**
     * Creates new form landingpage
     */
    public landingpage() {
        initComponents();
        setLocationRelativeTo(null);
        LoadUserIdNo();
        Fetch();
        
    }
    
  public void LoadUserIdNo(){
      
     PreparedStatement st;
     ResultSet rs;
     
     String query = "SELECT `id` FROM `users`";
     
    try {
        st = My_Connection.getConnection().prepareStatement(query);
        rs = st.executeQuery();
        IDD.removeAllItems();
        while (rs.next()){
            IDD.addItem(rs.getString(1));
        }
    } catch (SQLException ex) {
        Logger.getLogger(landingpage.class.getName()).log(Level.SEVERE, null, ex);
    }
  }
  
  
  
    private void Fetch(){
 try {
        PreparedStatement st;
        ResultSet rs;

        String query = "SELECT * FROM `users`";
        st = My_Connection.getConnection().prepareStatement(query);

        rs = st.executeQuery(); // Execute the query to get the result set.

        DefaultTableModel df = (DefaultTableModel) TABLE.getModel();
        df.setRowCount(0);

        // Move the ResultSetMetaData initialization after obtaining a valid ResultSet
        java.sql.ResultSetMetaData rss = rs.getMetaData();
        int q = rss.getColumnCount();

        while (rs.next()) {
            Vector v2 = new Vector();
            for (int a = 1; a <= q; a++) {
                v2.add(rs.getString("id"));
                v2.add(rs.getString("username"));
                v2.add(rs.getString("name"));
                v2.add(rs.getString("email"));
                v2.add(rs.getString("password"));
                v2.add(rs.getString("address"));
            }
            df.addRow(v2);
        }
    } catch (SQLException ex) {
        Logger.getLogger(landingpage.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        exit = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        username = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        password1 = new javax.swing.JLabel();
        Username = new javax.swing.JTextField();
        Name = new javax.swing.JTextField();
        Password = new javax.swing.JPasswordField();
        Password1 = new javax.swing.JPasswordField();
        Email = new javax.swing.JTextField();
        Address = new javax.swing.JTextField();
        INSERT = new javax.swing.JButton();
        UPDATE = new javax.swing.JButton();
        DELETE = new javax.swing.JButton();
        LOGOUT = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TABLE = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        IDD = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        welcome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        exit.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        exit.setForeground(new java.awt.Color(0, 0, 0));
        exit.setText("X");
        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });

        minimize.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        minimize.setForeground(new java.awt.Color(0, 0, 0));
        minimize.setText("-");
        minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));

        username.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        username.setForeground(new java.awt.Color(0, 0, 0));
        username.setText("USERNAME: ");

        name.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        name.setForeground(new java.awt.Color(0, 0, 0));
        name.setText("NAME : ");

        email.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        email.setForeground(new java.awt.Color(0, 0, 0));
        email.setText("EMAIL : ");

        password.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        password.setForeground(new java.awt.Color(0, 0, 0));
        password.setText("PASSWORD : ");

        address.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        address.setForeground(new java.awt.Color(0, 0, 0));
        address.setText("ADDRESS : ");

        password1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        password1.setForeground(new java.awt.Color(0, 0, 0));
        password1.setText("CONFIRM PASSWORD : ");

        Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameActionPerformed(evt);
            }
        });

        Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameActionPerformed(evt);
            }
        });

        Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordActionPerformed(evt);
            }
        });

        Email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailActionPerformed(evt);
            }
        });

        Address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressActionPerformed(evt);
            }
        });

        INSERT.setBackground(new java.awt.Color(0, 153, 153));
        INSERT.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        INSERT.setForeground(new java.awt.Color(0, 0, 0));
        INSERT.setText("ADD");
        INSERT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        INSERT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INSERTActionPerformed(evt);
            }
        });

        UPDATE.setBackground(new java.awt.Color(0, 153, 153));
        UPDATE.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        UPDATE.setForeground(new java.awt.Color(0, 0, 0));
        UPDATE.setText("UPDATE");
        UPDATE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATEActionPerformed(evt);
            }
        });

        DELETE.setBackground(new java.awt.Color(0, 153, 153));
        DELETE.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        DELETE.setForeground(new java.awt.Color(0, 0, 0));
        DELETE.setText("DELETE");
        DELETE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });

        LOGOUT.setBackground(new java.awt.Color(0, 153, 153));
        LOGOUT.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        LOGOUT.setForeground(new java.awt.Color(0, 0, 0));
        LOGOUT.setText("LOGOUT");
        LOGOUT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LOGOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LOGOUTActionPerformed(evt);
            }
        });

        TABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "USER ID", "USERNAME", "NAME", "EMAIL", "PASSWORD", "ADDRESS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TABLE);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        IDD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(LOGOUT))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(username)
                                    .addComponent(name)
                                    .addComponent(email)
                                    .addComponent(password)
                                    .addComponent(password1)
                                    .addComponent(address))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Email, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(Password1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Address, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                        .addComponent(DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(Username)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(Name)
                                        .addGap(18, 18, 18)
                                        .addComponent(IDD, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(INSERT, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(UPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Address, Email, Name, Username});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LOGOUT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(username)
                            .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(name)
                                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(IDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(email)
                            .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(password)
                            .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(password1)
                            .addComponent(Password1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(address)
                            .addComponent(Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UPDATE)
                            .addComponent(INSERT)
                            .addComponent(DELETE)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {email, name, username});

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Address, Email, Name, Password, Password1, Username});

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        welcome.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        welcome.setForeground(new java.awt.Color(0, 0, 0));
        welcome.setText("WELCOME");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(366, Short.MAX_VALUE)
                .addComponent(welcome)
                .addGap(458, 458, 458)
                .addComponent(minimize)
                .addGap(18, 18, 18)
                .addComponent(exit)
                .addGap(22, 22, 22))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(exit)
                        .addComponent(minimize))
                    .addComponent(welcome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:

        System.exit(0);
    }//GEN-LAST:event_exitMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        // TODO add your handling code here:
        xOffset = evt.getX();
        yOffset = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen() - xOffset;
        int y = evt.getYOnScreen() - yOffset;
        setLocation(x, y);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        PreparedStatement st;
        ResultSet rs;

        String uid = IDD.getSelectedItem().toString();

        String query = "SELECT * FROM `users` WHERE id=?";

        try {
            st = My_Connection.getConnection().prepareStatement(query);
            st.setString(1, uid);
            rs = st.executeQuery();

            if (rs.next()) {
                Username.setText(rs.getString(2));
                Name.setText(rs.getString(2));
                Email.setText(rs.getString(2));
                Password.setText(rs.getString(2));
                Password1.setText(rs.getString(2));
                Address.setText(rs.getString(2));
            }else{
                JOptionPane.showMessageDialog(null, "No Record Found!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(landingpage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void LOGOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOGOUTActionPerformed
        // TODO add your handling code here:
        login_form loginForm = new login_form();

        loginForm.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_LOGOUTActionPerformed

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
    try {
        // TODO add your handling code here:
        
        String id = IDD.getSelectedItem().toString();
        
        PreparedStatement st;
        
        
        String query = "DELETE FROM `users` WHERE id=?";
        
        st = My_Connection.getConnection().prepareStatement(query);
        
        st.setString(1, id);
        
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            int k = st.executeUpdate();
            if (k == 1) {
                JOptionPane.showMessageDialog(null, "Record has been deleted.");
                Name.setText("");
                Username.setText("");
                Email.setText("");
                Password.setText("");
                Password1.setText("");
                Address.setText("");
                Name.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Error Deleting");
            }
        }
        
    } catch (SQLException ex) {
        Logger.getLogger(landingpage.class.getName()).log(Level.SEVERE, null, ex);

    }
        
   
    }//GEN-LAST:event_DELETEActionPerformed

    private void UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATEActionPerformed
    try {
        // TODO add your handling code here:
        
        String id = IDD.getSelectedItem().toString();
        PreparedStatement st;
        ResultSet rs;
        
        String fnamee = Name.getText();
        String usernamee = Username.getText();
        String emaill = Email.getText();
        String pass11 = String.valueOf(Password.getPassword());
        String pass22 = String.valueOf(Password1.getPassword());
        String addresss = Address.getText();
        
        
         // Validate user input
        if (fnamee.isEmpty() || usernamee.isEmpty() || emaill.isEmpty() || pass11.isEmpty() || pass22.isEmpty() || addresss.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill in all fields.");
            return;
        }
        
        // Check if the passwords match
        if (!pass11.equals(pass22)) {
            JOptionPane.showMessageDialog(null, "Passwords do not match.");
            return;
        }
        
        String query = "UPDATE `users` SET name=?, username=?, email=?, password=?, address=? WHERE id=?";
        
        st = My_Connection.getConnection().prepareStatement(query);
            
            st.setString(1, fnamee);
            st.setString(2, usernamee);
            st.setString(3, emaill);
            st.setString(4, pass11);
            st.setString(5, addresss);
            st.setString(6, id);
            
                
            int k=st.executeUpdate();
            if (k==0){
                JOptionPane.showMessageDialog(null, "No Record Found");
            }else{
                JOptionPane.showMessageDialog(null, "Record Updated");
               Name.setText("");
               Username.setText("");
               Email.setText("");
               Password.setText("");
               Password1.setText("");
               Address.setText("");
               Name.requestFocus();
               LoadUserIdNo();
            }
            
            
                
                
                
                
                
                
                } catch (SQLException ex) {
        Logger.getLogger(landingpage.class.getName()).log(Level.SEVERE, null, ex);
    }
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_UPDATEActionPerformed

    private void INSERTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INSERTActionPerformed
        // TODO add your handling code here:

        String fnamee = Name.getText();
        String usernamee = Username.getText();
        String emaill = Email.getText();
        String pass11 = String.valueOf(Password.getPassword());
        String addresss = Address.getText();

        if(verifyFields())
        {
            if(!checkUsername(usernamee))
            {
                PreparedStatement ps;
                ResultSet rs;

                String registerUserQuery = "INSERT INTO `users`(`username`, `password`, `name`, `email`, `address`) VALUES (?,?,?,?,?)";

                try {
                    ps = My_Connection.getConnection().prepareStatement(registerUserQuery);
                    ps.setString(1, fnamee);
                    ps.setString(2, usernamee);
                    ps.setString(3, emaill);
                    ps.setString(4, pass11);
                    ps.setString(5, addresss);

                    if(ps.executeUpdate() !=0){
                        JOptionPane.showMessageDialog(null, "Add/Insert Account Success!");
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(register_form.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }

    }//GEN-LAST:event_INSERTActionPerformed

    private void AddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressActionPerformed

    private void EmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailActionPerformed

    private void NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameActionPerformed

    private void UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameActionPerformed

    private void PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordActionPerformed

     public boolean verifyFields() {
    String uname = Username.getText();
    String fname = Name.getText();
    String emails = Email.getText();
    String pass1 = String.valueOf(Password.getPassword());
    String pass2 = String.valueOf(Password1.getPassword());
    String add = Address.getText();
    
    if (uname.trim().equals("")||fname.trim().equals("")||emails.trim().equals("")||pass1.trim().equals("")||pass2.trim().equals("")||add.trim().equals(""))
        
    {
        JOptionPane.showMessageDialog(null,"One or More Fields Are Empty" , "Empty Fields", 2);
        return false;
    }
    
    else if (!pass1.equals(pass2))
    {
        JOptionPane.showMessageDialog(null, "Password Doesn't Match", "Confirm Password", 2);
        return false;
    }

    
    else {
        return true;
        
    }
}
    
    public boolean  checkUsername (String username){
        
        PreparedStatement st;
        ResultSet rs;
        boolean username_exist = false ; 
        
        String query = "SELECT * FROM `users` WHERE `username`= ? ";
        
    try {
        
        
        st = My_Connection.getConnection().prepareStatement(query);
        st.setString(1, username);
        rs = st.executeQuery();
        
        if(rs.next())
        {
            username_exist = true;
            JOptionPane.showMessageDialog(null, "This Username is Already Taken","Username Failed", 2 );
        }
       
        
    } catch (SQLException ex) {
        Logger.getLogger(register_form.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    return username_exist;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(landingpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(landingpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(landingpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(landingpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new landingpage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Address;
    private javax.swing.JButton DELETE;
    private javax.swing.JTextField Email;
    private javax.swing.JComboBox<String> IDD;
    private javax.swing.JButton INSERT;
    private javax.swing.JButton LOGOUT;
    private javax.swing.JTextField Name;
    private javax.swing.JPasswordField Password;
    private javax.swing.JPasswordField Password1;
    private javax.swing.JTable TABLE;
    private javax.swing.JButton UPDATE;
    private javax.swing.JTextField Username;
    private javax.swing.JLabel address;
    private javax.swing.JLabel email;
    private javax.swing.JLabel exit;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel minimize;
    private javax.swing.JLabel name;
    private javax.swing.JLabel password;
    private javax.swing.JLabel password1;
    private javax.swing.JLabel username;
    private javax.swing.JLabel welcome;
    // End of variables declaration//GEN-END:variables
}
